# NGDATA Mimir Monolithic Configuration for Lab Environment
# Based on: https://github.com/NGDATA/mimir/blob/main/operations/helm/charts/mimir-distributed/monolithic.yaml

deploymentMode: monolithic

fullnameOverride: mimir

mimir:
  structuredConfig:
    limits:
      # Delete from storage metrics data older than 24h for lab environment
      compactor_blocks_retention_period: 24h
      ingestion_rate: 10000
      ingestion_burst_size: 100000
      max_series_per_user: 1000000
      max_global_series_per_user: 1000000
    
    common:
      storage:
        backend: s3
        s3:
          endpoint: minio:9000
          access_key_id: minio
          secret_access_key: minio123
          insecure: true
          
    blocks_storage:
      storage_prefix: blocks
      s3:
        bucket_name: mimir-blocks
        endpoint: minio:9000
        access_key_id: minio
        secret_access_key: minio123
        insecure: true
        
    alertmanager_storage:
      storage_prefix: alertmanager
      s3:
        bucket_name: mimir-alertmanager
        endpoint: minio:9000
        access_key_id: minio
        secret_access_key: minio123
        insecure: true
        
    ruler_storage:
      storage_prefix: ruler
      s3:
        bucket_name: mimir-ruler
        endpoint: minio:9000
        access_key_id: minio
        secret_access_key: minio123
        insecure: true
    
    server:
      http_listen_port: 8080
      grpc_listen_port: 9095
      log_level: info

# Monolithic deployment configuration
monolithic:
  replicas: 1  # Single replica for lab environment
  persistentVolume:
    enabled: true
    size: "10Gi"
  
  # Resource configuration for lab
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi
  
  # Disable zone awareness for single-node lab
  zoneAwareReplication:
    enabled: false
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Enable nginx for unified access
nginx:
  enabled: true
  replicas: 1
  ingress:
    enabled: false  # Disable for lab, use port-forward instead

# Disable all distributed components
distributor:
  enabled: false
  
ingester:
  enabled: false
  
querier:
  enabled: false
  
query_frontend:
  enabled: false
  
query_scheduler:
  enabled: false
  
ruler:
  enabled: false
  
compactor:
  enabled: false
  
store_gateway:
  enabled: false

# Disable built-in minio (we use our existing minio)
minio:
  enabled: false

# Disable alertmanager for now
alertmanager:
  enabled: false

# ServiceMonitor for Prometheus scraping
serviceMonitor:
  enabled: true
  interval: 30s
